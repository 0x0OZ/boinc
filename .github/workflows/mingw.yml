name: Linux-MinGW
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  schedule:
    - cron:  '0 12 * * 0'

jobs:
  build:
    name: ${{ matrix.type }}-build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        type: [libs-mingw, apps-mingw, apps-mingw-vcpkg]
      fail-fast: false
    steps:
      - uses: actions/checkout@v2

      - name: Install dependencies
        run: |
          sudo apt-get -qq update
          sudo apt-get install -y mingw-w64 mingw-w64-tools mingw-w64-x86-64-dev mingw-w64-i686-dev tar curl zip unzip p7zip-full

      - name: Make libs with mingw
        if: success() && matrix.type == 'libs-mingw'
        run: cd lib && MINGW=x86_64-w64-mingw32 make -f Makefile.mingw

      - name: Make apps with mingw
        if: success() && matrix.type == 'apps-mingw'
        run: cd lib && MINGW=x86_64-w64-mingw32 make -f Makefile.mingw wrapper

      - name: Automake vcpkg apps
        if: success() && matrix.type == 'apps-mingw-vcpkg'
        run: ./_autosetup

      - name: Configure mingw vcpkg apps
        if: success() && matrix.type == 'apps-mingw-vcpkg'
        run: |
          mingw/ci_configure_apps.sh

      - name: Make mingw vcpkg apps
        if: success() && matrix.type == 'apps-mingw-vcpkg'
        run: |
          mingw/ci_make_apps.sh

      - name: Prepare artifacts for deploy
        if: ${{ success() && ! contains(matrix.type, 'libs-mingw') }}
        run: python ./deploy/prepare_deployment.py win_${{ matrix.type }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        if: ${{ ! contains(matrix.type, 'libs') }}
        with:
          name: win_${{ matrix.type }}_${{ github.event.pull_request.head.sha }}
          path: deploy/win_${{ matrix.type }}.7z
